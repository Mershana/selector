/* h2 {
	font-size: 20px;
}
/* размер будет 30рх */
/* h2 {
	font-size: 30px; 
} */ 


/* применится 30рх red and italic */
/* h2 {
	font-size: 30px;
	color: blue;
}
h2 {
	font-style: italic;
	color: red;
} */

/* Правило первое
Класс всегда побеждает селектор тега:

<p class="text">text</p>
p {
	color: red;
}
.text {
	color: green; /* применится этот цвет */

	/* Правило второе
Идентификатор всегда побеждает класс:

<p id="elem" class="text">text</p>
.text {
	color: red;
}
#elem {
	color: green; /* применится этот цвет */

	/* При равных условиях побеждает тот селектор, у которого больше частей. Например, если у нас два селектора тегов, то победит тот, у которого тегов больше:

	<div>
		<p>text</p>
	</div>
	p {
		color: red;
	}
	div p {
		color: green; /* применится этот цвет */
	
		/* Если два селектора классов, то победит тот, в котором указано больше классов (если там будут селекторы тегов, то они не влияют):

<div class="block">
	<p class="text">text</p>
</div>
.text {
	color: red;
}
.block .text {
	color: green; /* применится этот цвет */



	/* Во всех предыдущих примерах все селекторы должны ловить сам элемент. Может быть такое, что один селектор ловит элемент, а второй селектор ловит родителя этого элемента.

Вы уже знаете, что если родителю задан, например, цвет, то этот цвет будет наследоваться потомком. Но, если потомку также задан цвет, то селектор потомка будет иметь больший приоритет, чем селектор родителя.

Это значит, что селектор тега потомка побеждает класс родителя:

<div class="block">
	<p>text</p>
</div>
.block {
	color: red;
}
p {
	color: green; /* применится этот цвет */

/* 
	Селектор тега потомка также побеждает идентификатор родителя:

<div id="block">
	<p class="text">text</p>
</div>
#block {
	color: red;
}
.text {
	color: green; /* применится этот цвет */

